<Window x:Class="ValorantEloTracker.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ValorantEloTracker"
        xmlns:properties="clr-namespace:ValorantEloTracker.Properties"
        mc:Ignorable="d"
        Title="MainWindow" Height="650" Width="600" AllowsTransparency="True" Background="DimGray" WindowStyle="None"
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf">
    <Window.Resources>
        <LinearGradientBrush x:Key="ComboBox.Static.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFF0F0F0" Offset="0.0"/>
            <GradientStop Color="#FFE5E5E5" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#FFACACAC"/>
        <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FF606060"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#FFABADB3"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFECF4FC" Offset="0.0"/>
            <GradientStop Color="#FFDCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FF000000"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#FF7EB4EA"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFEBF4FC" Offset="0.0"/>
            <GradientStop Color="#FFDCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FF7EB4EA"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAECFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF569DE5"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAEBFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>
        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="templateRoot" Background="{StaticResource ComboBox.Static.Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource ComboBox.Static.Border}" SnapsToDevicePixels="true">
                            <Border x:Name="splitBorder" BorderThickness="1" BorderBrush="Transparent" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                <Path x:Name="arrow" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z" Fill="{StaticResource ComboBox.Static.Glyph}" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.MouseOver.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="gameslectorcombobox" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                    <theme:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MinWidth="{Binding ActualWidth, ElementName=templateRoot}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                        <Border x:Name="dropDownBorder" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" BorderThickness="1" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </theme:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Window.Resources>
    <Grid Background="#FF232323">
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="53*"/>
            <RowDefinition Height="57*"/>
            <RowDefinition Height="497*"/>
            <RowDefinition Height="27*"/>
        </Grid.RowDefinitions>
        <Rectangle x:Name="dragbox" Fill="#FF151414" MouseDown="dragbox_MouseDown" Grid.ColumnSpan="2" Grid.RowSpan="2"/>
        <Image x:Name="closebtn" HorizontalAlignment="Left" Height="33" Margin="257,0,0,0" VerticalAlignment="Center" Width="43" Source="/close-button.png" MouseLeftButtonUp="closebtn_MouseLeftButtonUp" Grid.Column="1"/>
        <Image HorizontalAlignment="Left" Height="38" Margin="7,9,0,0" VerticalAlignment="Top" Width="36" Source="/cogs-gears-machine-preferences-settings-icon-cogs-icon-gears-651265.png" MouseLeftButtonUp="Image_MouseLeftButtonUp"/>
        <TextBlock x:Name="titlebox" IsHitTestVisible="False" HorizontalAlignment="Left" Text="Valorant Elo Tracker" TextWrapping="Wrap" VerticalAlignment="Center" Height="33" Width="300" Foreground="{Binding Source={x:Static properties:Settings1.Default}, Path=colour, Mode=TwoWay}" FontSize="24" FontFamily="Unispace" Grid.ColumnSpan="2" Margin="150,0,0,0"/>
        <TextBlock x:Name="displayuserbox" IsHitTestVisible="False" HorizontalAlignment="Left" Text="Error Loading User Info" TextWrapping="Wrap" VerticalAlignment="Top" Height="19" Width="580" Foreground="{Binding Source={x:Static properties:Settings1.Default}, Path=colour, Mode=TwoWay}" FontSize="15" FontFamily="Unispace" Grid.ColumnSpan="2" Margin="10,14,0,0" Grid.Row="1"/>
        <Rectangle HorizontalAlignment="Left" Height="164" Grid.Row="2" VerticalAlignment="Top" Width="600" Fill="#FF151414" Margin="0,87,0,0" Grid.ColumnSpan="2"/>
        <TextBlock IsHitTestVisible="False" HorizontalAlignment="Left" Text="Map:" TextWrapping="Wrap" VerticalAlignment="Top" Height="33" Width="65" Foreground="{Binding Source={x:Static properties:Settings1.Default}, Path=colour, Mode=TwoWay}" FontSize="22" FontFamily="Unispace" Margin="7,27,0,0" Grid.Row="2"/>
        <TextBlock x:Name="winamount" IsHitTestVisible="False" HorizontalAlignment="Left" Text="Total Change" TextWrapping="Wrap" VerticalAlignment="Top" Height="22" Width="132" Foreground="{Binding Source={x:Static properties:Settings1.Default}, Path=colour, Mode=TwoWay}" FontSize="18" FontFamily="Unispace" Grid.Row="2" TextAlignment="Justify" Margin="234,98,0,0" Grid.ColumnSpan="2"/>
        <TextBlock IsHitTestVisible="False" HorizontalAlignment="Left" Text="MMR Before" TextWrapping="Wrap" VerticalAlignment="Top" Height="17" Width="118" Foreground="{Binding Source={x:Static properties:Settings1.Default}, Path=colour, Mode=TwoWay}" FontSize="18" FontFamily="Unispace" Margin="25,133,0,0" Grid.Row="2" TextAlignment="Justify"/>
        <TextBlock IsHitTestVisible="False" HorizontalAlignment="Left" Text="MMR After" TextWrapping="Wrap" VerticalAlignment="Top" Height="18" Width="102" Foreground="{Binding Source={x:Static properties:Settings1.Default}, Path=colour, Mode=TwoWay}" FontSize="18" FontFamily="Unispace" Margin="168,133,0,0" Grid.Row="2" TextAlignment="Justify" Grid.Column="1"/>
        <TextBlock x:Name="totalincrease" IsHitTestVisible="False" HorizontalAlignment="Left" Text="000" TextWrapping="Wrap" VerticalAlignment="Top" Height="38" Width="66" Foreground="{Binding Source={x:Static properties:Settings1.Default}, Path=colour, Mode=TwoWay}" FontSize="36" FontFamily="Unispace" Margin="267,133,0,0" Grid.Row="2" TextAlignment="Center" Grid.ColumnSpan="2"/>
        <TextBlock x:Name="pointsbefore" IsHitTestVisible="False" HorizontalAlignment="Left" Text="000" TextWrapping="Wrap" VerticalAlignment="Top" Height="38" Width="66" Foreground="{Binding Source={x:Static properties:Settings1.Default}, Path=colour, Mode=TwoWay}" FontSize="36" FontFamily="Unispace" Margin="51,163,0,0" Grid.Row="2" TextAlignment="Center"/>
        <TextBlock x:Name="pointsafter" IsHitTestVisible="False" HorizontalAlignment="Left" Text="000" TextWrapping="Wrap" VerticalAlignment="Top" Height="38" Width="66" Foreground="{Binding Source={x:Static properties:Settings1.Default}, Path=colour, Mode=TwoWay}" FontSize="36" FontFamily="Unispace" Margin="186,163,0,0" Grid.Row="2" TextAlignment="Center" Grid.Column="1"/>
        <Image x:Name="refreshbtn" HorizontalAlignment="Left" Height="38" Margin="207,0,0,0" VerticalAlignment="Center" Width="36" Source="/viewrefresh_104298.png" MouseLeftButtonUp="refreshbtn_MouseLeftButtonUp" Grid.Column="1"/>
        <Slider x:Name="selectionslider" IsEnabled="False" HorizontalAlignment="Left" Margin="105,468,0,0" Grid.Row="2" VerticalAlignment="Top" Width="390" TickPlacement="TopLeft" IsSnapToTickEnabled="True" Ticks="{x:Null}" TickFrequency="1" Maximum="19" ValueChanged="selectionslider_ValueChanged" RenderTransformOrigin="0.5,0.5" Grid.ColumnSpan="2">
            <Slider.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform Angle="-180"/>
                    <TranslateTransform/>
                </TransformGroup>
            </Slider.RenderTransform>
        </Slider>
        <TextBlock x:Name="sliderbox" IsHitTestVisible="False" HorizontalAlignment="Left" Text="000" TextWrapping="Wrap" VerticalAlignment="Top" Height="26" Width="55" Foreground="{Binding Source={x:Static properties:Settings1.Default}, Path=colour, Mode=TwoWay}" FontSize="22" FontFamily="Unispace" Margin="45,471,0,0" Grid.Row="2" TextAlignment="Center"/>
        <TextBlock IsHitTestVisible="False" HorizontalAlignment="Left" Text="Elo" TextWrapping="Wrap" VerticalAlignment="Top" Height="30" Width="46" Foreground="#FFFA4454" FontSize="24" FontFamily="Unispace" Margin="516,392,0,0" Grid.Row="2" TextAlignment="Justify"/>
        <TextBlock x:Name="eloafter" IsHitTestVisible="False" HorizontalAlignment="Left" Text="0000" TextWrapping="Wrap" VerticalAlignment="Top" Height="24" Width="64" Foreground="{Binding Source={x:Static properties:Settings1.Default}, Path=colour, Mode=TwoWay}" FontSize="24" FontFamily="Unispace" Margin="207,425,0,0" Grid.Row="2" TextAlignment="Center" Grid.Column="1"/>
        <Image x:Name="imagebanner" HorizontalAlignment="Left" Height="61" Margin="205,454,0,0" VerticalAlignment="Top" Width="65" Source="/TX_CompetitiveTier_Large_0.png" Stretch="Fill" Grid.Row="2" Grid.RowSpan="2" StretchDirection="Both" Grid.Column="1"/>
        <Image x:Name="rankmovementimg" HorizontalAlignment="Left" Height="17" Margin="257,494,0,0" Grid.Row="2" VerticalAlignment="Top" Width="17" Source="/PROMOTED.png" Grid.RowSpan="2" Stretch="Fill" Grid.Column="1"/>
        <lvc:CartesianChart x:Name="chartedelo" Series="{Binding SeriesCollection}" LegendLocation="None" Margin="10,256,10,61" Grid.Row="2" DisableAnimations="True" Grid.ColumnSpan="2">
            <lvc:CartesianChart.AxisY>
                <lvc:Axis  LabelFormatter="{Binding YFormatter}"></lvc:Axis>
            </lvc:CartesianChart.AxisY>
            <lvc:CartesianChart.AxisX>
                <lvc:Axis Labels="{Binding Labels}"></lvc:Axis>
            </lvc:CartesianChart.AxisX>
        </lvc:CartesianChart>
        <TextBlock x:Name="mapbox" IsHitTestVisible="False" HorizontalAlignment="Left" Text="Error" TextWrapping="Wrap" VerticalAlignment="Top" Height="33" Width="136" Foreground="{Binding Source={x:Static properties:Settings1.Default}, Path=colour, Mode=TwoWay}" FontSize="22" FontFamily="Unispace" Margin="77,27,0,0" Grid.Row="2"/>
        <TextBlock IsHitTestVisible="False" HorizontalAlignment="Left" Text="Date:" TextWrapping="Wrap" VerticalAlignment="Top" Height="33" Width="72" Foreground="{Binding Source={x:Static properties:Settings1.Default}, Path=colour, Mode=TwoWay}" FontSize="22" FontFamily="Unispace" Margin="218,27,0,0" Grid.Row="2"/>
        <TextBlock x:Name="datebox" IsHitTestVisible="False" HorizontalAlignment="Left" Text="Error" TextWrapping="Wrap" VerticalAlignment="Top" Height="33" Width="295" Foreground="{Binding Source={x:Static properties:Settings1.Default}, Path=colour, Mode=TwoWay}" FontSize="22" FontFamily="Unispace" Margin="295,27,0,0" Grid.Row="2" Grid.ColumnSpan="2"/>
    </Grid>
</Window>
